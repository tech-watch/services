service: tech-watch

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-1

plugins:
  - serverless-dotenv-plugin
  - serverless-pseudo-parameters

functions:
  cronFeeds:
    package:
      individually: true
      exclude:
        - './**'
      include:
        - ./src/cronFeeds/index.js
        - ./src/cronFeeds/services/*
        - ./src/cronFeeds/node_modules/**
        - ./src/cronFeeds/package.json
    timeout: 60
    handler: src/cronFeeds/index.handler
    role: CronFeedsRole
    events:
      - schedule: rate(${env:RATE_IN_HOURS} hours)
    environment:
      TOPIC_ARN:
        Ref: SendToTrelloTopic

  sendToTrello:
    package:
      individually: true
      exclude:
        - './**'
      include:
        - ./src/sendToTrello/index.js
        - ./src/sendToTrello/services/*
        - ./src/sendToTrello/node_modules/**
        - ./src/sendToTrello/package.json
    timeout: 60
    handler: src/sendToTrello/index.handler

resources:
  Resources:
    SendToTrelloTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: SendToTrello
        Subscription:
          - Endpoint:
              Fn::GetAtt:
                - SendToTrelloLambdaFunction
                - Arn
            Protocol: lambda
        TopicName: SendToTrello

    LambdaInvokePermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        Principal: sns.amazonaws.com
        SourceArn:
          Ref: SendToTrelloTopic
        FunctionName:
          Fn::GetAtt:
            - SendToTrelloLambdaFunction
            - Arn

    CronFeedsRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: CronFeedsRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: sqlPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
                - Effect: Allow
                  Action:
                    - sqs:SendMessage
                  Resource: arn:aws:sqs:#{AWS::Region}:#{AWS::AccountId}:${env:SQS_SEND_TO_TRELLO_QUEUE_NAME}
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource:
                    Ref: SendToTrelloTopic
